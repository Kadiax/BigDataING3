authors2015 <- authors2015["Authors"]
authors2016 <- authors2016["Authors"]
authors2017 <- authors2017["Authors"]
authors2018 <- authors2018["Authors"]
authors2019 <- authors2019["Authors"]
#sauvegarde en fichier csv
write.csv (authors2015, file = "export/authors2015.csv", row.names=FALSE)
write.csv (authors2016, file = "export/authors2016.csv", row.names=FALSE)
write.csv (authors2017, file = "export/authors2017.csv", row.names=FALSE)
write.csv (authors2018, file = "export/authors2018.csv", row.names=FALSE)
write.csv (authors2019, file = "export/authors2019.csv", row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
#librairies
library(readxl)
#imports des données
pubmed <- read.csv(file = '~/R/projects/BigDataProject/data/excel/csv-neurotrans-set-2.csv')
authors <- pubmed[,c("Authors", "PublicationYear")]
#authors
authors2015 <- authors[authors$PublicationYear == "2015",]
authors2016 <- authors[authors$PublicationYear == "2016",]
authors2017 <- authors[authors$PublicationYear == "2017",]
authors2018 <- authors[authors$PublicationYear == "2018",]
authors2019 <- authors[authors$PublicationYear == "2019",]
authors2015 <- authors2015["Authors"]
authors2016 <- authors2016["Authors"]
authors2017 <- authors2017["Authors"]
authors2018 <- authors2018["Authors"]
authors2019 <- authors2019["Authors"]
authors2015
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::kable(mtcars[1:5,, 1:5], caption = "A table caption")
#construction tabelau sommets
x<- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol=3, byrow=TRUE,
dimnames = list(c("row1", "row2"), c("C.1", "C.2", "C.3")))
x
#construction tabelau sommets
table<- matrix(c(1,2,3,4,5 ,11,12,13,14,15), nrow = 2, ncol=5, byrow=TRUE,
dimnames = list(c("sommets", "arrêtes"), c("2015", "2016", "2017", "2018", "2019")))
table
#construction tabelau
sommets2015 <- split(authors2015, ",")
sommets2015
#construction tabelau
sommets2015 <- strsplit(authors2015, ",")
sommets2015
#construction tabelau
sommets2015 <- strsplit(authors2015, ",")
#construction tabelau
sommets2015 <- split(authors2015, ",")
sommets2015
#construction tabelau
sommets2015 <- split(authors2015, f, drop = FALSE, sep = ",", lex.order = FALSE)
#construction tabelau
f<-list()
sommets2015 <- split(authors2015, f, drop = FALSE, sep = ",", lex.order = FALSE)
sommets2015
i<-1
sommets2015 <- strsplit(authors2015[i, ], ",")
res<-unlist(strsplit(toString(authors2015), split=","))
res
i<-1
res<-unlist(strsplit(toString(authors2015[i,]), split=","))
res
res<-strsplit(toString(authors2015[i,]), split=",")
res
length(res)
res<-unlist(strsplit(toString(authors2015[i,]), split=","))
length(res)
i<-2
res<-unlist(strsplit(toString(authors2015[i,]), split=","))
length(res)
i<-1
nbsommets2015<-0
i<-1
nbsommets2015<-0
while(i<nrow(authors2015)){
res<-unlist(strsplit(toString(authors2015[i,]), split=","))
nbsommets2015<- nbsommets2015+length(res)
i <- i + 1
}
nbsommets2015
i<-1
nbsommets2015<-0
while(i<nrow(authors2019)){
res<-unlist(strsplit(toString(authors2019[i,]), split=","))
nbsommets2015<- nbsommets2015+length(res)
i <- i + 1
}
nbsommets2015
getSommets<-function(x){
i<-1
res<-0
while(i<nrow(x)){
res<-unlist(strsplit(toString(x[i,]), split=","))
nbsommets2015<- nbsommets2015+length(res)
i <- i + 1
}
res
}
getSommets(authors2015)
getSommets<-function(x){
i<-1
nbsommets<-0
while(i<nrow(x)){
res<-unlist(strsplit(toString(x[i,]), split=","))
nbsommets<- nbsommets2015+length(res)
i <- i + 1
}
nbsommets
}
getSommets(authors2015)
getSommets<-function(x){
i<-1
nbsommets<-0
while(i<nrow(x)){
row<-unlist(strsplit(toString(x[i,]), split=","))
nbsommets<- nbsommets+length(row)
i <- i + 1
}
nbsommets
}
getSommets(authors2015)
#construction fonction qui calcule le nombre d'auteurs dans un vecteur
getSommets<-function(x){
i<-1
nbsommets<-0
while(i<nrow(x)){
row<-unlist(strsplit(toString(x[i,]), split=","))
nbsommets<- nbsommets+length(row)
i <- i + 1
}
nbsommets
}
table<- matrix(c(getSommets(authors2015),getSommets(authors2016),getSommets(authors2017),getSommets(authors2018),
getSommets(authors2019),11,12,13,14,15), nrow = 2, ncol=5, byrow=TRUE,
dimnames = list(c("sommets", "arrêtes"), c("2015", "2016", "2017", "2018", "2019")))
table
table<- matrix(c(1,2,3,4,5,getSommets(authors2015),getSommets(authors2016),getSommets(authors2017),getSommets(authors2018),
getSommets(authors2019),11,12,13,14,15), nrow = 2, ncol=5, byrow=TRUE,
dimnames = list(c("puplications", "sommets", "arrêtes"), c("2015", "2016", "2017", "2018", "2019")))
table<- matrix(c(1,2,3,4,5,getSommets(authors2015),getSommets(authors2016),getSommets(authors2017),getSommets(authors2018),
getSommets(authors2019),11,12,13,14,15), nrow = 3, ncol=5, byrow=TRUE,
dimnames = list(c("puplications", "sommets", "arrêtes"), c("2015", "2016", "2017", "2018", "2019")))
table
table<- matrix(c(length(authors2015),length(authors2016),length(authors2017),length(authors2018),length(authors2019),getSommets(authors2015),getSommets(authors2016),getSommets(authors2017),getSommets(authors2018),
getSommets(authors2019),11,12,13,14,15), nrow = 3, ncol=5, byrow=TRUE,
dimnames = list(c("puplications", "sommets", "arrêtes"), c("2015", "2016", "2017", "2018", "2019")))
table
table<- matrix(c(length(authors2015),length(authors2016),length(authors2017),length(authors2018),length(authors2019),getSommets(authors2015),getSommets(authors2016),getSommets(authors2017),getSommets(authors2018),
getSommets(authors2019),11,12,13,14,15), nrow = 3, ncol=5, byrow=TRUE,
dimnames = list(c("puplications", "sommets", "arrêtes"), c("2015", "2016", "2017", "2018", "2019")))
table
table<- matrix(c(nrow(authors2015),nrow(authors2016),nrow(authors2017),nrow(authors2018),nrow(authors2019),getSommets(authors2015),getSommets(authors2016),getSommets(authors2017),getSommets(authors2018),
getSommets(authors2019),11,12,13,14,15), nrow = 3, ncol=5, byrow=TRUE,
dimnames = list(c("puplications", "sommets", "arrêtes"), c("2015", "2016", "2017", "2018", "2019")))
table
#create a data frame for output
output <- data.frame("Source","Source")
output
#create a data frame for output
output <- data.frame("hi","bye")
names(output)<-c("Source","Target")
output
#create a data frame for output
output <- data.frame("","")
names(output)<-c("Source","Target")
output
#create a data frame for output
#output <- data.frame("","")
names(output)<-c("Source","Target")
output
#create a data frame for output
#output <- data.frame("","")
names(out)<-c("Source","Target")
getArretes<-function(authors){
#create a data frame for output
output <- data.frame("0","0")
names(output)<-c("Source","Target")
output
i <- 1
while (i<nrow(autors)) {
#get Authors splited
res<-unlist(strsplit(toString(authors), split=","))
#adding relations
j <- 1
if(length(res) == 2){
#create a dataFrame
relationAuthor<-data.frame(res[j][1],res[j+1][1])
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
}
if(length(res) > 2){
while ((j+1)<length(res)){
k<-j+1
while(k<=length(res)){
relationAuthor<-data.frame(res[j][1],res[k][1])
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
k<-k+1
}
j<- j + 1
}
}
i <- i + 1
}
output
}
#exportation des vecteurs dans un csv
write.csv (getArretes(authors2015), file = "export/relations/authors2015.csv", row.names=FALSE)
getArretes<-function(authors){
#create a data frame for output
output <- data.frame("0","0")
names(output)<-c("Source","Target")
output
i <- 1
while (i<nrow(authors)) {
#get Authors splited
res<-unlist(strsplit(toString(authors), split=","))
#adding relations
j <- 1
if(length(res) == 2){
#create a dataFrame
relationAuthor<-data.frame(res[j][1],res[j+1][1])
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
}
if(length(res) > 2){
while ((j+1)<length(res)){
k<-j+1
while(k<=length(res)){
relationAuthor<-data.frame(res[j][1],res[k][1])
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
k<-k+1
}
j<- j + 1
}
}
i <- i + 1
}
output
}
#exportation des vecteurs dans un csv
write.csv (getArretes(authors2015), file = "export/relations/authors2015.csv", row.names=FALSE)
getArretes<-function(authors){
#create a data frame for output
output <- data.frame("0","0")
names(output)<-c("Source","Target")
output
i <- 1
while (i<nrow(authors)) {
#get Authors splited
res<-unlist(strsplit(toString(authors[i,]), split=","))
#adding relations
j <- 1
if(length(res) == 2){
#create a dataFrame
relationAuthor<-data.frame(res[j][1],res[j+1][1])
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
}
if(length(res) > 2){
while ((j+1)<length(res)){
k<-j+1
while(k<=length(res)){
relationAuthor<-data.frame(res[j][1],res[k][1])
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
k<-k+1
}
j<- j + 1
}
}
i <- i + 1
}
output
}
#exportation des vecteurs dans un csv
nbArretes2015<- getArretes(authors2015)
nrow(nbArretes2015)
write.csv (nbArretes2015, file = "export/relations/authors2015.csv", row.names=FALSE)
nbArretes2015<- getArretes(authors2015)
getArretes<-function(authors){
#create a data frame for output
output <- data.frame("0","0")
names(output)<-c("Source","Target")
output
i <- 1
while (i<nrow(authors)) {
#get Authors splited
res<-unlist(strsplit(toString(authors[i,]), split=","))
#adding relations
j <- 1
if(length(res) == 2){
#create a dataFrame
relationAuthor<-data.frame(res[j][1],res[j+1][1])
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
}
if(length(res) > 2){
while ((j+1)<length(res)){
k<-j+1
while(k<=length(res)){
relationAuthor<-data.frame(res[j][1],res[k][1])
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
k<-k+1
}
j<- j + 1
}
}
i <- i + 1
}
output
}
#exportation des vecteurs dans un csv
nbArretes2015<- getArretes(authors2015)
nbArretes2016<- getArretes(authors2016)
nbArretes2017<- getArretes(authors2017)
nbArretes2018<- getArretes(authors2018)
nbArretes2019<- getArretes(authors2019)
write.csv (nbArretes2015, file = "export/relations/authors2015.csv", row.names=FALSE)
write.csv (nbArretes2016, file = "export/relations/authors2016.csv", row.names=FALSE)
write.csv (nbArretes2017, file = "export/relations/authors2017.csv", row.names=FALSE)
write.csv (nbArretes2018, file = "export/relations/authors2018.csv", row.names=FALSE)
write.csv (nbArretes2019, file = "export/relations/authors2019.csv", row.names=FALSE)
table<- matrix(c(nrow(authors2015),nrow(authors2016),nrow(authors2017),nrow(authors2018),nrow(authors2019),
getSommets(authors2015),getSommets(authors2016),getSommets(authors2017),getSommets(authors2018),
getSommets(authors2019),
nrow(nbArretes2015),nrow(nbArretes2016),nrow(nbArretes2017),nrow(nbArretes2018),nrow(nbArretes2019)), nrow = 3, ncol=5, byrow=TRUE,
dimnames = list(c("puplications", "sommets", "arrêtes"), c("2015", "2016", "2017", "2018", "2019")))
table
length(row1<-unlist(strsplit(toString(authors2015[1,]), split=",")))
length(row1<-unlist(strsplit(toString(authors2015[1,]), split=",")))
length(row2<-unlist(strsplit(toString(authors2015[2,]), split=",")))
length(row3<-unlist(strsplit(toString(authors2015[3,]), split=",")))
s <- "    this is an example string    "
trim(s)
s <- "    this is an example string    "
str_trim(s, side = c("both", "left", "right"))
str_trim("  String with trailing and leading white space\t")
strtrim(c("abcdef", "abcdef", "abcdef"), c(1,5,10))
strtrim("  String with trailing and leading white space\t")
strtrim("  String with trailing and leading white space\t", 100)
strtrim("  String with trailing and leading white space\t", 10)
write.csv (nbArretes2015, file = "export/relations/authors2015.csv", row.names=FALSE,quote=FALSE)
# Returns string without leading or trailing white space
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
# Returns string without leading or trailing white space
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
getArretes<-function(authors){
#create a data frame for output
output <- data.frame("0","0")
names(output)<-c("Source","Target")
output
i <- 1
while (i<nrow(authors)) {
#get Authors splited
res<-unlist(strsplit(toString(authors[i,]), split=","))
#added relations
j <- 1
if(length(res) == 2){
#create a dataFrame
relationAuthor<-data.frame(trim(res[j][1]),trim(res[j+1][1]))
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
}
if(length(res) > 2){
while ((j+1)<length(res)){
k<-j+1
while(k<=length(res)){
relationAuthor<-data.frame(trim(res[j][1]), trim(res[k][1]))
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
k<-k+1
}
j<- j + 1
}
}
i <- i + 1
}
output
}
#exportation des vecteurs dans un csv
nbArretes2015<- getArretes(authors2015)
write.csv (nbArretes2015, file = "export/relations/authors2015.csv", row.names=FALSE,quote=FALSE)
# Returns string without leading or trailing white space
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
getArretes<-function(authors){
#create a data frame for output
output <- data.frame(matrix(ncol = 2, nrow = 0))
names(output)<-c("Source","Target")
output
i <- 1
while (i<nrow(authors)) {
#get Authors splited
res<-unlist(strsplit(toString(authors[i,]), split=","))
#added relations
j <- 1
if(length(res) == 2){
#create a dataFrame
relationAuthor<-data.frame(trim(res[j][1]),trim(res[j+1][1]))
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
}
if(length(res) > 2){
while ((j+1)<length(res)){
k<-j+1
while(k<=length(res)){
relationAuthor<-data.frame(trim(res[j][1]), trim(res[k][1]))
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
k<-k+1
}
j<- j + 1
}
}
i <- i + 1
}
output
}
#exportation des vecteurs dans un csv
nbArretes2015<- getArretes(authors2015)
write.csv (nbArretes2015, file = "export/relations/authors2015.csv", row.names=FALSE,quote=FALSE)
# Returns string without leading or trailing white space
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
trimDot<- function (x) gsub("\\.(?=[^.]*\\.)", "", x, perl=TRUE)
getArretes<-function(authors){
#create a data frame for output
output <- data.frame(matrix(ncol = 2, nrow = 0))
names(output)<-c("Source","Target")
output
i <- 1
while (i<nrow(authors)) {
#get Authors splited
row<-trimDot(authors[i,])
res<-unlist(strsplit(toString(row), split=","))
#added relations
j <- 1
if(length(res) == 2){
#create a dataFrame
relationAuthor<-data.frame(trim(res[j][1]),trim(res[j+1][1]))
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
}
if(length(res) > 2){
while ((j+1)<length(res)){
k<-j+1
while(k<=length(res)){
relationAuthor<-data.frame(trim(res[j][1]), trim(res[k][1]))
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
k<-k+1
}
j<- j + 1
}
}
i <- i + 1
}
output
}
#exportation des vecteurs dans un csv
nbArretes2015<- getArretes(authors2015)
write.csv (nbArretes2015, file = "export/relations/authors2015.csv", row.names=FALSE,quote=FALSE)
#get Authors splited
row<-sub("\\.", "", authors[1,])
#get Authors splited
row<-sub("\\.", "", authors2015[1,])
row
# Returns string without leading or trailing white space
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
getArretes<-function(authors){
#create a data frame for output
output <- data.frame(matrix(ncol = 2, nrow = 0))
names(output)<-c("Source","Target")
output
i <- 1
while (i<nrow(authors)) {
#get Authors splited
row<-sub("\\.", "", authors[i,])
res<-unlist(strsplit(toString(row), split=","))
#added relations
j <- 1
if(length(res) == 2){
#create a dataFrame
relationAuthor<-data.frame(trim(res[j][1]),trim(res[j+1][1]))
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
}
if(length(res) > 2){
while ((j+1)<length(res)){
k<-j+1
while(k<=length(res)){
relationAuthor<-data.frame(trim(res[j][1]), trim(res[k][1]))
names(relationAuthor)<-c("Source","Target")
output <- rbind(output, relationAuthor)
k<-k+1
}
j<- j + 1
}
}
i <- i + 1
}
output
}
#exportation des vecteurs dans un csv
nbArretes2015<- getArretes(authors2015)
write.csv (nbArretes2015, file = "export/relations/authors2015.csv", row.names=FALSE,quote=FALSE)
![](img/graphe2015.PNG)
Figure 4: extrait co-auteurs graphe 2015
